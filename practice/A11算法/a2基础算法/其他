K最近邻算法：
特征：某物的特征提取，以便找到和此最邻近的物品，以便分类。如ocr用到的就是特征提取，不过要复杂得多。
回归：类似于平均值，如多少个人对一部电影的打分，来预测另一部类似电影的分数

二叉查找树：
对于无序数列，平均时间O(logn)，最糟情况O(n)
对于有序数列，即使在最糟的情况下也只需O(logn)
缺点：不能随机访问，如找到第5个元素

反向索引：
一个散列表，将单词映射到包含它的页面，成为反向索引。  如搜索引擎，用到此原理。

傅里叶变换：
比喻：给它一杯冰沙，它能告诉你其中包含哪些成分。换言之，给定一首歌曲，傅里叶变换能够将其中的各种频率
分离出来。  如mp3格式的工作原理

并行算法：
并行性管理开销：假设你要对一个包含1000个元素的数组进行排序，如何在两个内核之间分配这项任务呢？如果
让每个内核对其中500个元素进行排序，再将两个排好序的数组合并成一个有序数组，那么合并也是需要时间的。
负载均衡：假设你需要完成10个任务，因此你给每个内核都分配5个任务。但分配给内核A的任务都和容易，10秒
钟就完成了，而分配给内核B的任务都很难，1分钟才完成。这意味着有那么50秒，内核B在忙死忙活，而内核A却
闲得很！你如何均匀地分配工作，让两个内核都一样忙呢。

MapReduce：
分布式算法。在需要数百个内核进行运算时，需要用到分布式算法。  如Hadoop
Map：映射函数。将一个数组转换为另一个数组。
Reduce：归并函数。将一个数组转换为另一个元素。

布隆过滤器：
是一种概率型数据结构，它提供的数据有可能不对，但很可能是正确的。如管理某个博客网站，需检查某文以前
是否发布过。当判断博客是否已经发布过，使用散列表绝对可靠，但性能太低，使用布隆过滤器，答案虽不一定
完全正确，但很大的可能性是对的。
