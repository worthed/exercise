# -*- coding:utf-8 -*-
'''
要实现多任务，通常我们会设计Master-Worker模式，Master负责分配任务，Worker负责执行任务，因此，多任务环境下，通常是一个Master，多个Worker
多进程：实现Master-Worker，主进程就是Master，其他进程就是Worker
多线程：实现Master-Worker，主线程就是Master，其他线程就是Worker
'''

'''
优缺点
多进程：
    优点：稳定性高，因为一个子进程崩溃了，不会影响主进程和其他子进程（当然主进程挂了所有进程就全挂了，但是Master进程只负责分配任务，挂掉的概率低）--例如早期的Apache 
    缺点：1、创建进程的代价大，在Unix/Linux系统下，用fork调用还行，但在Windows下创建进程开销巨大
         2、操作系统能同时运行的进程数也是有限的，在内存和CPU的限制下，如果有几千个进程同时运行，操作系统连调度都会成问题
多线程：
    通常比多进程快一点，但是也快不到哪去
    缺点：任何一个线程挂掉都可能直接造成整个进程崩溃，因为所有线程共享进程的内存
'''